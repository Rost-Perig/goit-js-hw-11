{"version":3,"sources":["js/source-refs.js","js/utils.js","js/timer.js","index.js"],"names":["colors","invColors","refs","FINAL_DATE","body","document","querySelector","changeColorStart","changeColorStop","timeoutIdColor","COLOR_DELAY","days","hours","mins","secs","colons","querySelectorAll","startCount","resetCount","onStartColorChange","setInterval","randomNumb","Math","round","random","length","style","backgroundColor","color","borderColor","disabled","onStopColorChange","clearInterval","Timer","constructor","daysEl","hoursEl","minsEl","secsEl","colonEl","isActive","intervalIdCountDown","nowDate","Date","now","deltaTime","FIN_DATE","getTimeComponents","textContent","colonBlinking","time","pad","floor","value","String","padStart","forEach","colon","classList","contains","remove","add","getTime","timer","window","addEventListener","stopCount","console","log","delay","ms","Promise","resolve","reject","setTimeout","logger","then","catch","error","warn","users","name","active","toggleUserState","allUsers","userName","map","user","loggerTwo","updatedUsers","table","makeTransaction","transaction","randomIntegerFromInterval","id","min","max","logSuccess","obj","logError","amount"],"mappings":"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","file":"src.c92c1e84.js","sourceRoot":"..\\src","sourcesContent":["export const colors = [\r\n  '#FFFFFF',\r\n  '#2196F3',\r\n  '#4CAF50',\r\n  '#FF9800',\r\n  '#009688',\r\n  '#795548',\r\n];\r\n\r\nexport const invColors = [\r\n  '#000000',\r\n  '#de690c',\r\n  '#b350af',\r\n  '#0067ff',\r\n  '#ff6977',\r\n  '#86aab7',\r\n];\r\n\r\nexport const refs = {\r\n  FINAL_DATE: 'September 24,2021',\r\n  body: document.querySelector('body'),\r\n  changeColorStart: document.querySelector('button[data-action=\"start\"]'),\r\n  changeColorStop: document.querySelector('button[data-action=\"stop\"]'),\r\n  timeoutIdColor: null,\r\n  COLOR_DELAY: 1500,\r\n  days: document.querySelector('[data-value=\"days\"]'),\r\n  hours: document.querySelector('[data-value=\"hours\"]'),\r\n  mins: document.querySelector('[data-value=\"mins\"]'),\r\n  secs: document.querySelector('[data-value=\"secs\"]'),\r\n  colons: document.querySelectorAll('[data-value=\"colon\"]'),\r\n  startCount: document.querySelector('button[data-action=\"start-count\"]'),\r\n  resetCount: document.querySelector('button[data-action=\"reset-count\"]')\r\n};\r\n\r\n","import {\r\n  colors,\r\n  invColors,\r\n  refs,\r\n} from './source-refs';\r\n\r\nexport function onStartColorChange() {\r\n  refs.timeoutIdColor = setInterval(() => {\r\n  let randomNumb = Math.round(Math.random() * (colors.length - 1));\r\n  refs.body.style.backgroundColor = `${colors[randomNumb]}`;\r\n  refs.body.style.color = `${invColors[randomNumb]}`; \r\n  refs.changeColorStart.style.borderColor = `${invColors[randomNumb]}`;\r\n  refs.changeColorStop.style.borderColor = `${invColors[randomNumb]}`;\r\n  refs.startCount.style.borderColor = `${invColors[randomNumb]}`;\r\n  refs.resetCount.style.borderColor = `${invColors[randomNumb]}`;\r\n  }, refs.COLOR_DELAY);\r\n\r\n  refs.changeColorStart.disabled = true;\r\n};\r\n\r\nexport function onStopColorChange() {\r\n  clearInterval(refs.timeoutIdColor);\r\n\r\n  refs.changeColorStart.disabled = false;\r\n}\r\n","export class Timer {\r\n  constructor(FINAL_DATE, daysEl, hoursEl, minsEl, secsEl, colonEl) {\r\n    this.FIN_DATE = new Date(FINAL_DATE).getTime();\r\n    this.isActive = false;\r\n    this.intervalIdCountDown = null;\r\n    this.daysEl = daysEl;\r\n    this.hoursEl = hoursEl;\r\n    this.minsEl = minsEl;\r\n    this.secsEl = secsEl;\r\n    this.colonEl = colonEl;\r\n  }\r\n\r\n  startCount = () => {\r\n    if (this.isActive) {\r\n      return;\r\n    }\r\n    this.intervalIdCountDown = setInterval(() => {\r\n      this.isActive = true;\r\n      const nowDate = Date.now();\r\n      const deltaTime = this.FIN_DATE - nowDate;\r\n      const { days, hours, mins, secs } = this.getTimeComponents(deltaTime);\r\n      // console.log(`${days}:${hours}:${mins}:${secs}`);\r\n      this.daysEl.textContent = `${days}`;\r\n      this.hoursEl.textContent = `${hours}`;\r\n      this.minsEl.textContent = `${mins}`;\r\n      this.secsEl.textContent = `${secs}`;\r\n      this.colonBlinking();\r\n      \r\n    }, 1000);\r\n  }\r\n\r\n  stopCount = () =>  {\r\n    clearInterval(this.intervalIdCountDown);\r\n    this.daysEl.textContent = '00';\r\n    this.hoursEl.textContent = '00';\r\n    this.minsEl.textContent = '00';\r\n    this.secsEl.textContent = '00';\r\n    this.isActive = false;\r\n  }\r\n\r\n  getTimeComponents = (time) => {\r\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\n    const hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\n    return {days, hours, mins, secs}\r\n  }\r\n\r\n   pad = (value) => {\r\n    return String(value).padStart(2, '0');\r\n  }\r\n\r\n  colonBlinking = () => {\r\n    this.colonEl.forEach((colon) => {\r\n      if (colon.classList.contains(\"opacity\")) {\r\n        colon.classList.remove(\"opacity\");\r\n      } else {\r\n        colon.classList.add(\"opacity\");\r\n      }\r\n    })\r\n  }\r\n}","import './styles/styles.css';\r\n\r\nimport {\r\n  colors,\r\n  invColors,\r\n  refs,\r\n} from './js/source-refs';\r\n\r\nimport {\r\n  onStartColorChange,\r\n  onStopColorChange\r\n} from './js/utils';\r\n\r\nimport { Timer } from './js/timer';\r\n\r\n// const timer = new Timer(refs.FINAL_DATE, refs.days, refs.hours, refs.mins, refs.secs);\r\n\r\nconst { FINAL_DATE, days, hours, mins, secs, colons } = refs\r\nconst timer = new Timer(FINAL_DATE, days, hours, mins, secs, colons);\r\n\r\nwindow.addEventListener('DOMContentLoaded', timer.startCount);\r\nrefs.changeColorStart.addEventListener('click', onStartColorChange);\r\nrefs.changeColorStop.addEventListener('click', onStopColorChange);\r\nrefs.startCount.addEventListener('click', timer.startCount);\r\nrefs.resetCount.addEventListener('click', timer.stopCount);\r\n\r\n\r\nconsole.log(\"Привіт, світ! Життя брутальне!\");\r\n\r\n\r\n/*\r\n =========================================promisification============================================ \r\n */\r\n\r\n/* \r\n*ЗАДАНИЕ 1 - прикольно \r\n*/\r\n\r\nconst delay = ms => {\r\n  // Твой код\r\n    \r\n    return new Promise((resolve, reject) => {\r\n        setTimeout(() => {\r\n            const passed = Math.random() > 0.5;\r\n            if (passed) {\r\n                resolve(ms);\r\n            }\r\n            reject(`TASK 1: З ${ms}мс не склалося... ХАЛЕПА!`);\r\n        },ms);\r\n    });\r\n};\r\n\r\nconst logger = time => console.log(`TASK 1: Resolved after ${time}ms`);\r\n\r\ndelay(2000)\r\n    .then(logger)\r\n    .catch(error => console.warn(error));\r\ndelay(1000)\r\n    .then(logger)\r\n    .catch(error => console.warn(error));\r\ndelay(1500)\r\n    .then(logger)\r\n    .catch(error => console.warn(error));\r\n\r\n\r\n/* \r\n*ЗАДАНИЕ 1 - строго по заданию \r\n*/\r\n\r\n// const delay = ms => {\r\n//     // Твой код\r\n//     return new Promise((resolve, reject) => {\r\n//         setTimeout(() => {\r\n//             resolve(ms);\r\n//         },ms);\r\n//     });\r\n// };\r\n\r\n// const logger = time => console.log(`Resolved after ${time}ms`);\r\n\r\n// // Вызовы функции для проверки\r\n// delay(2000).then(logger); // Resolved after 2000ms\r\n// delay(1000).then(logger); // Resolved after 1000ms\r\n// delay(1500).then(logger); // Resolved after 1500ms\r\n\r\n\r\n/* \r\n*ЗАДАНИЕ 2 \r\n*/\r\nconsole.log('TASK 2')\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return new Promise((resolve, reject) => {\r\n        const updatedUsers = allUsers.map(user =>\r\n            user.name === userName ? { ...user, active: !user.active } : user,\r\n        );\r\n        resolve(updatedUsers);\r\n    });\r\n};    \r\n    \r\nconst loggerTwo = updatedUsers => console.table(updatedUsers);\r\n\r\n/*\r\n * Должно работать так\r\n */\r\ntoggleUserState(users, 'Mango').then(loggerTwo);\r\ntoggleUserState(users, 'Lux').then(loggerTwo);\r\n\r\n\r\n\r\n/* \r\n*ЗАДАНИЕ 3 - выполненное\r\n*/\r\nconst makeTransaction = (transaction) => {\r\n    \r\n    return new Promise((resolve, reject) => {\r\n     const delay = randomIntegerFromInterval(200, 500);    \r\n    setTimeout(() => {\r\n              \r\n        const canProcess = Math.random() > 0.3;\r\n\r\n        if (canProcess) {\r\n            resolve({ id:transaction.id, time:delay });\r\n        } \r\n        reject(transaction.id);\r\n        \r\n    }, delay); \r\n    })\r\n    \r\n};\r\n\r\nconst randomIntegerFromInterval = (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n\r\nconst logSuccess = (obj) => {\r\n  console.log(`TASK 3: Transaction ${obj.id} processed in ${obj.time}ms`);\r\n};\r\n\r\nconst logError = id => {\r\n  console.warn(`TASK 3: Error processing transaction ${id}. Please try again later.`);\r\n};\r\n/*\r\n * Должно работать так\r\n */\r\nmakeTransaction({ id: 70, amount: 150 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 71, amount: 230 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 72, amount: 75 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\nmakeTransaction({ id: 73, amount: 100 })\r\n  .then(logSuccess)\r\n  .catch(logError);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]}